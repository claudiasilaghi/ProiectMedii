// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProiectMedii.Data;

#nullable disable

namespace ProiectMedii.Migrations
{
    [DbContext(typeof(ProiectMediiContext))]
    partial class ProiectMediiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ProiectMedii.Models.Adresa", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Judet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Numar")
                        .HasColumnType("int");

                    b.Property<string>("Oras")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Strada")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Adresa");
                });

            modelBuilder.Entity("ProiectMedii.Models.Membru", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nume")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Prenume")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Membru");
                });

            modelBuilder.Entity("ProiectMedii.Models.Recenzie", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("AdresaID")
                        .HasColumnType("int");

                    b.Property<string>("Parere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RestaurantID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AdresaID");

                    b.HasIndex("RestaurantID");

                    b.ToTable("Recenzie");
                });

            modelBuilder.Entity("ProiectMedii.Models.Restaurant", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("AdresaID")
                        .HasColumnType("int");

                    b.Property<string>("Nume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AdresaID");

                    b.ToTable("Restaurant");
                });

            modelBuilder.Entity("ProiectMedii.Models.Rezervare", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("AdresaID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("MembruID")
                        .HasColumnType("int");

                    b.Property<int?>("Persoane")
                        .HasColumnType("int");

                    b.Property<int>("RestaurantID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AdresaID");

                    b.HasIndex("MembruID");

                    b.HasIndex("RestaurantID");

                    b.ToTable("Rezervare");
                });

            modelBuilder.Entity("ProiectMedii.Models.Recenzie", b =>
                {
                    b.HasOne("ProiectMedii.Models.Adresa", "Adresa")
                        .WithMany("Recenzii")
                        .HasForeignKey("AdresaID");

                    b.HasOne("ProiectMedii.Models.Restaurant", "Restaurant")
                        .WithMany("Recenzii")
                        .HasForeignKey("RestaurantID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adresa");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("ProiectMedii.Models.Restaurant", b =>
                {
                    b.HasOne("ProiectMedii.Models.Adresa", "Adresa")
                        .WithMany("Restaurante")
                        .HasForeignKey("AdresaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adresa");
                });

            modelBuilder.Entity("ProiectMedii.Models.Rezervare", b =>
                {
                    b.HasOne("ProiectMedii.Models.Adresa", "Adresa")
                        .WithMany("Rezervari")
                        .HasForeignKey("AdresaID");

                    b.HasOne("ProiectMedii.Models.Membru", "Membru")
                        .WithMany("Rezervari")
                        .HasForeignKey("MembruID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProiectMedii.Models.Restaurant", "Restaurant")
                        .WithMany("Rezervari")
                        .HasForeignKey("RestaurantID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adresa");

                    b.Navigation("Membru");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("ProiectMedii.Models.Adresa", b =>
                {
                    b.Navigation("Recenzii");

                    b.Navigation("Restaurante");

                    b.Navigation("Rezervari");
                });

            modelBuilder.Entity("ProiectMedii.Models.Membru", b =>
                {
                    b.Navigation("Rezervari");
                });

            modelBuilder.Entity("ProiectMedii.Models.Restaurant", b =>
                {
                    b.Navigation("Recenzii");

                    b.Navigation("Rezervari");
                });
#pragma warning restore 612, 618
        }
    }
}
